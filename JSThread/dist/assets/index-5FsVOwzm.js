(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const l of r.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function o(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(t){if(t.ep)return;t.ep=!0;const r=o(t);fetch(t.href,r)}})();const a=class a{constructor(e){this.name=e,this.log_color=`oklch(80% .23 ${this.color_hash(e)%12*30})`}static log(e,o=""){e=e.split(/\s+/).map(n=>{const t=this.colors[this.special_words[n.toLocaleLowerCase()]]||"white";return this.wrap_color(t,n)}).join(" "),document.getElementById("output").innerHTML+=o+e+"<br>"}log(e){a.log(e,`<span style="color:${this.log_color};">${this.name}</span>: `)}static wrap_color(e,o){return`<span style="color:${e};">${o}</span>`}color_hash(e){return e.split("").reduce((o,n)=>o+n.charCodeAt(0),2)}};a.special_words={request:"blue",requesting:"blue",release:"yellow",releasing:"yellow",wait:"purple",waiting:"purple",notify:"orange",notifying:"orange",notifyAll:"red",notifyingAll:"red",acquired:"green",acquiring:"green"},a.colors={blue:"oklch(80% .23 240)",yellow:"oklch(80% .23 60)",purple:"oklch(80% .23 300)",orange:"oklch(80% .23 30)",red:"oklch(80% .23 0)",green:"oklch(80% .23 120)"};let c=a;class d{constructor(){this.queue=[]}enqueue(e){this.queue.push(e)}dequeue(){return this.queue.shift()}isEmpty(){return this.queue.length===0}peek(){return this.queue[0]}}const g="/swen_342_github/JSThread/dist/assets/CounterThread-D5ihgUeH.js",m="/swen_342_github/JSThread/dist/assets/WorkerThread-BtcD2Cm7.js",s=class s{constructor(e,o,n="Thread"){this.data={};const t={WorkerThread:this.createWorkerThread,CounterThread:this.createCounterThread};this.worker=t[e](),this.worker.onerror=r=>console.error("Worker error",r),this.worker.onmessage=this.onmessage.bind(this),this.data=o,this.log=new c(n)}start(){return this.worker.postMessage({action:"start",data:this.data}),this}join(){return new Promise(e=>{this.worker.onmessage=o=>{o.data.action==="end"&&e(),this.onmessage(o)}})}createCounterThread(){const e=new URL(g,import.meta.url);return new Worker(e,{type:"module"})}createWorkerThread(){const e=new URL(m,import.meta.url);return new Worker(e,{type:"module"})}onmessage(e){const o=e.data,[n,t]=[o.action,o.value];switch(n){case"print":this.log.log(t);break;case"request":this.log.log(`Requesting ${t}`),this.addKey(t),s.keys[t].isEmpty()?(s.keys[t].enqueue(this.worker),this.give(t)):s.keys[t].enqueue(this.worker);break;case"release":this.log.log(`Releasing ${t}`),this.addKey(t),s.keys[t].dequeue(),this.giveTo(t,s.keys[t].peek());break;case"wait":this.addWait(t),s.waits[t].enqueue(this.worker);break;case"notify":this.addWait(t),this.notifyTo(t,s.waits[t].dequeue());break;case"notifyAll":{const r=s.waits[t];for(;!r.isEmpty();)this.notifyTo(t,r.dequeue());break}}}addKey(e){return s.keys[e]?!1:(s.keys[e]=new d,!0)}addWait(e){return s.waits[e]?!1:(s.waits[e]=new d,!0)}give(e){this.worker.postMessage({action:"give",value:e})}giveTo(e,o){o==null||o.postMessage({action:"give",value:e})}notifyTo(e,o){o==null||o.postMessage({action:"notify",value:e})}};s.keys={},s.waits={};let u=s;const y=Object.getPrototypeOf(async function(){}).constructor;async function p(){const i=document.getElementById("code").value;new y("Thread","Log",i)(u,c)}function f(){document.getElementById("output").innerHTML=""}function w(){document.getElementById("code").value=""}function h(i){document.getElementById("code").value=E[i]}function k(){const i=window.scrollY;console.log(document.documentElement),console.log(document.documentElement.style),document.documentElement.style.setProperty("--y-scroll",i.toString()+"px")}document.addEventListener("scroll",k);document.getElementById("start").addEventListener("click",p);document.getElementById("clearConsole").addEventListener("click",f);document.getElementById("clearCode").addEventListener("click",w);document.getElementById("Log Example").addEventListener("click",i=>h(0));document.getElementById("Sync+Join Example").addEventListener("click",i=>h(1));const E=['Log.log("Hello, world!");',`const threads = [];
for(let i = 0; i < 4; i++) {
	threads.push(new Thread('WorkerThread', {}, \`Thread\${i+1}\`));
}

const [t1, t2, t3, t4] = threads;

await t1.start().join() // Main thread will stop here
t2.start() // All 3 threads will start at once, but only one will have the key at a time.
t3.start()
t4.start()`];
